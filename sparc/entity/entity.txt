Basic Sparc Entity
-------------------
A Sparc entity is an object that has a unique Id, a name, and a description.
There is a convience class, SparcEntity, that can be used as a base class
for other implementations.

We'll test a simple object creation
>>> from zope.component import createObject
>>> my_entity_details = {
... 			'id': '12345',
...				'name': u'A name',
...				'description': u'A description',
...				'details': u'Some details'
...				}
>>> my_entity = createObject(u'sparc.entity.entity', **my_entity_details)
>>> my_entity.getId()
'12345'
>>> my_entity.name
u'A name'
>>> my_entity.description
u'A description'
>>> my_entity.details
u'Some details'

We should also be able to create an entity without so much noise
>>> my_entity_details = {'id': '12345'}
>>> my_entity = createObject(u'sparc.entity.entity', **my_entity_details)
>>> my_entity.getId()
'12345'
>>> my_entity.name

The implementation also supports Zope annotations.
>>> from zope.annotation.interfaces import IAnnotations, IAnnotatable
>>> IAnnotatable.providedBy(my_entity)
True
>>> from zope.annotation.interfaces import IAttributeAnnotatable
>>> IAttributeAnnotatable.providedBy(my_entity)
True
>>> annotations = IAnnotations(my_entity)
>>> annotations['my_test'] = 'an annotations'
>>> dict(my_entity.__dict__['__annotations__'])
{'my_test': 'an annotations'}

We have an adapter that allows us to add a owner reference to our entities
>>> from sparc.entity import IOwner
>>> owner = IOwner(my_entity)
>>> owner.owner

>>> owner.owner = my_entity
>>> owner.owner.getId()
'12345'
>>> from zope.schema import ValidationError
>>> try:
...     owner.owner = ''
...     assert False
... except ValidationError:
...     pass

We have an adapter that allows us to add a URL reference to our entities
>>> from sparc.entity import IUrlReference
>>> reference = IUrlReference(my_entity)
>>> reference.url

>>> reference.url = 'http://myref.website.com/my_entity'
>>> reference.url
'http://myref.website.com/my_entity'
>>> from zope.schema import ValidationError
>>> try:
...     reference.url = ''
...     assert False
... except ValidationError:
...     pass

We have another adapter that allows us to add keyword tags to our entities
>>> from sparc.entity import IKeyphraseTags
>>> keyphrase_tags = IKeyphraseTags(my_entity)
>>> keyphrase_tags.tags
set([])

>>> keyphrase_tags.tags.add(u'a keyphrase tag')
>>> keyphrase_tags.tags
set([u'a keyphrase tag'])
>>> try:
...     keyphrase_tags.tags = ''
...     assert False
... except ValidationError:
...     pass